Class Vigenere extends Cipher
    Private key
    
    Method encrypt(plainText)
        plainText <- convertToLowercase(plainText)
        ciphertext <- ""
        alphabet <- "abcdefghijklmnopqrstuvwxyz"
        keyIndex <- 0
        
        For i <- 0 To lengthOf(plainText)
            character <- getCharacterAtIndex(plainText, i)
            
            If isLetter(character) Then
                letterIndex <- find(character)
                keywordIndex <- find(getCharacterAtIndex(key, keyIndex))
                equals <- (letterIndex + keywordIndex) % 26
                encryptedCharacter <- getCharacterAtIndex(alphabet, equals)
                ciphertext <- concatenate(ciphertext, encryptedCharacter)
                keyIndex <- (keyIndex + 1) % lengthOf(key)
            Else
                ciphertext <- concatenate(ciphertext, character)
        
        Return ciphertext
    
    Method decrypt(cypheredText)
        cypheredText <- convertToLowercase(cypheredText)
        decryptedText <- ""
        alphabet <- "abcdefghijklmnopqrstuvwxyz"
        keyIndex <- 0
        
        For i <- 0 To lengthOf(cypheredText)
            letter <- getCharacterAtIndex(cypheredText, i)
            
            If isLetter(letter) Then
                letterIndex <- find(letter)
                keywordIndex <- find(getCharacterAtIndex(key, keyIndex))
                equals <- (letterIndex - keywordIndex + 26) % 26
                decryptedCharacter <- getCharacterAtIndex(alphabet, equals)
                decryptedText <- concatenate(decryptedText, decryptedCharacter)
                keyIndex <- (keyIndex + 1) % lengthOf(key)
            Else
                decryptedText <- concatenate(decryptedText, letter)
        
        Return decryptedText
    
    Private Method find(letter)
        alphabet <- "abcdefghijklmnopqrstuvwxyz"
        Return index of letter in alphabet
