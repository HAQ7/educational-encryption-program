class Vigenere {
    private key;
    
    method encrypt(plainText) {
        plainText <- convertToLowercase(plainText)
        ciphertext <- ""
        alphabet <- "abcdefghijklmnopqrstuvwxyz"
        keyIndex <- 0
        
        for i <- 0 to lengthOf(plainText) {
            character <- getCharacterAtIndex(plainText, i)
            
            if isLetter(character) {
                letterIndex <- find(character)
                keywordIndex <- find(getCharacterAtIndex(key, keyIndex))
                equals <- (letterIndex + keywordIndex) % 26
                encryptedCharacter <- getCharacterAtIndex(alphabet, equals)
                ciphertext <- concatenate(ciphertext, encryptedCharacter)
                keyIndex <- (keyIndex + 1) % lengthOf(key)
            } else {
                ciphertext <- concatenate(ciphertext, character)
            }
        }
        
        return ciphertext
    }
    
    method decrypt(cypheredText) {
        cypheredText <- convertToLowercase(cypheredText)
        decryptedText <- ""
        alphabet <- "abcdefghijklmnopqrstuvwxyz"
        keyIndex <- 0
        
        for i <- 0 to lengthOf(cypheredText) {
            letter <- getCharacterAtIndex(cypheredText, i)
            
            if isLetter(letter) {
                letterIndex <- find(letter)
                keywordIndex <- find(getCharacterAtIndex(key, keyIndex))
                equals <- (letterIndex - keywordIndex + 26) % 26
                decryptedCharacter <- getCharacterAtIndex(alphabet, equals)
                decryptedText <- concatenate(decryptedText, decryptedCharacter)
                keyIndex <- (keyIndex + 1) % lengthOf(key)
            } else {
                decryptedText <- concatenate(decryptedText, letter)
            }
        }
        
        return decryptedText
    }
    
    private method find(letter) {
        alphabet <- "abcdefghijklmnopqrstuvwxyz"
        return index of letter in alphabet
    }
}
